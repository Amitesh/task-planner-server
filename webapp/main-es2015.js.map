{"version":3,"sources":["./src/app/app.component.html","./src/app/task-planner/dialogs/confirm-dialogs/confirm-dialog.component.html","./src/app/task-planner/dialogs/input-dialogs/input-dialog.component.html","./src/app/task-planner/task-list/task-list.component.html","./src/app/task-planner/task-planner.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/interceptors/app-http.interceptor.ts","./src/app/services/environment.service.ts","./src/app/task-planner/dialogs/confirm-dialogs/confirm-dialog.component.scss","./src/app/task-planner/dialogs/confirm-dialogs/confirm-dialog.component.ts","./src/app/task-planner/dialogs/input-dialogs/input-dialog.component.scss","./src/app/task-planner/dialogs/input-dialogs/input-dialog.component.ts","./src/app/task-planner/sevices/task-list.service.ts","./src/app/task-planner/sevices/task.service.ts","./src/app/task-planner/task-list/task-list.component.scss","./src/app/task-planner/task-list/task-list.component.ts","./src/app/task-planner/task-planner.component.scss","./src/app/task-planner/task-planner.component.ts","./src/app/task-planner/task-planner.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export default \"<div>\\n  <task-planner></task-planner>\\n</div>\\n\";","export default \"<div>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{title}}</h4>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p>Are you sure?</p>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"activeModal.close(false)\\\">No</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"deleteClick()\\\">Yes</button>\\r\\n  </div>\\r\\n</div>\";","export default \"<div>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{title}}</h4>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p>Name</p>\\r\\n    <input id=\\\"name-input\\\" [formControl]=\\\"input\\\" type=\\\"text\\\" (keydown.enter)=\\\"input.valid && create()\\\">\\r\\n    <p class=\\\"small\\\" [class.text-danger]=\\\"input.invalid && input.dirty\\\" *ngIf=\\\"input.invalid && input.dirty\\\">Input can't\\r\\n      be blank.</p>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" id=\\\"cancel-btn\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"activeModal.close()\\\">Cancel</button>\\r\\n    <button type=\\\"button\\\" id=\\\"ok-btn\\\" class=\\\"btn\\\" [class.btn-outline-dark]=\\\"input.invalid\\\" [class.btn-primary]=\\\"input.valid\\\"\\r\\n      [class.disabled]=\\\"input.invalid\\\" [disabled]=\\\"input.invalid\\\" (click)=\\\"create()\\\">Ok</button>\\r\\n  </div>\\r\\n</div>\";","export default \"<div class=\\\"tasks\\\">\\r\\n  <div class=\\\"sortable\\\" [attr.data-id]=\\\"taskList._id\\\" [class.empty]=\\\"tasks.length === 0\\\" [sortablejs]=\\\"tasks\\\" [sortablejsOptions]=\\\"sortableOptions\\\">\\r\\n    <div class=\\\"card\\\" *ngFor=\\\"let task of tasks\\\" [attr.data-id]=\\\"task._id\\\" [attr.data-task]=\\\"taskStringfy(task)\\\">\\r\\n      <div tabindex=\\\"0\\\" [attr.aria-label]=\\\"task.name\\\" class=\\\"card-content\\\">\\r\\n        <span class=\\\"truncate\\\" title=\\\"{{ task.name }}\\\">{{ task.name }}</span>\\r\\n        <span class=\\\"clearfix\\\"><a href=\\\"#\\\" class=\\\"task-delete delete-icon\\\" (click)=\\\"onDelete(task)\\\"><i\\r\\n              class=\\\"fas fa-trash\\\"></i></a></span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <a href=\\\"#\\\" class=\\\"add-task-btn\\\" (click)=\\\"addTask()\\\">Add task</a>\\r\\n</div>\";","export default \"<div class=\\\"task-planner\\\">\\r\\n  <div class=\\\"header\\\">\\r\\n    <h3 class=\\\"title\\\"><i class=\\\"fas fa-tasks\\\"></i> Task Planner</h3>\\r\\n    <a href=\\\"#\\\" id=\\\"tasklist-add-button\\\" class=\\\"add-list\\\" (click)=\\\"addList()\\\">Add List</a>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"task-board clearfix\\\">\\r\\n    <div class=\\\"lists\\\" [class.empty]=\\\"taskLists.length === 0\\\">\\r\\n      <div class=\\\"list\\\" *ngFor=\\\"let tasklist of taskLists\\\">\\r\\n        <div class=\\\"clearfix\\\">\\r\\n          <span tabindex=\\\"0\\\" [attr.aria-label]=\\\"tasklist.name\\\">\\r\\n            <h5 class=\\\"truncate\\\" title=\\\"{{ tasklist.name }}\\\">\\r\\n              {{ tasklist.name }}\\r\\n            </h5>\\r\\n          </span>\\r\\n          <a href=\\\"#\\\" class=\\\"delete-icon\\\" (click)=\\\"deleteTaskList(tasklist)\\\">\\r\\n            <i class=\\\"fas fa-trash danger\\\"></i>\\r\\n          </a>\\r\\n        </div>\\r\\n        <task-list [taskList]=\\\"tasklist\\\" (errorOnMove)=\\\"errorOnMove($event)\\\"></task-list>\\r\\n      </div>\\r\\n      <div class=\\\"empty-tasklist\\\">\\r\\n        <h4>Welcome to your task planner board! <i class=\\\"fas fa-rocket\\\"></i></h4>\\r\\n        To add new task list click 'Add list' link above.\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"hints\\\" *ngIf=\\\"taskLists.length !== 0\\\">\\r\\n    <h6>Hints</h6>\\r\\n    <ul>\\r\\n      <li>Empty task list and task name is not allowed.</li>\\r\\n      <li>Duplicate task list and task name is allowed.</li>\\r\\n      <li>Task order is not maintained yet.</li>\\r\\n      <li>Drop the task in highlighted drop zone area between <br>Task list name and Add task link.</li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export default \"p {\\n  font-family: Lato;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBaUI7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInAge1xuICBmb250LWZhbWlseTogTGF0bztcbn0iXX0= */\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'my-app',\n  styleUrls: ['./app.component.css'],\n  templateUrl: './app.component.html',\n})\nexport class AppComponent { }\n","import { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { AppHttpInterceptor } from './interceptors/app-http.interceptor';\nimport { TaskListService } from './task-planner/sevices/task-list.service';\nimport { TaskService } from './task-planner/sevices/task.service';\nimport { TaskPlannerModule } from './task-planner/task-planner.module';\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [AppComponent],\n  imports: [BrowserModule, HttpClientModule, NgbModule, TaskPlannerModule],\n  providers: [\n    TaskListService,\n    TaskService,\n    {\n      multi: true,\n      provide: HTTP_INTERCEPTORS,\n      useClass: AppHttpInterceptor,\n    },\n  ],\n})\nexport class AppModule { }\n","import {\r\n  HttpErrorResponse,\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AppHttpInterceptor implements HttpInterceptor {\r\n  public intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler,\r\n  ): Observable<HttpEvent<any>> {\r\n    let authorizedRequest: HttpRequest<any>;\r\n\r\n    // Add header key-values to each request\r\n    authorizedRequest = request.clone({\r\n      headers: request.headers.set('Authorization', 'Bearer token'),\r\n    });\r\n\r\n    if (!authorizedRequest.headers.has('Content-Type')) {\r\n      authorizedRequest = authorizedRequest.clone({\r\n        headers: authorizedRequest.headers.set(\r\n          'Content-Type',\r\n          'application/json',\r\n        ),\r\n      });\r\n    }\r\n\r\n    authorizedRequest = authorizedRequest.clone({\r\n      headers: authorizedRequest.headers.set('Accept', 'application/json'),\r\n    });\r\n\r\n    /*\r\n     * Handle the error status code and messages at common place.\r\n     * Use dialog or toaster to show the messages .\r\n     * Use status code to design the error logging for server or for user.\r\n     */\r\n    return next.handle(authorizedRequest).pipe(\r\n      // Give a one more retry for slower devices\r\n      retry(1),\r\n      catchError((error: HttpErrorResponse) => {\r\n        let errorMessage = '';\r\n        console.log(error);\r\n        if (error.error instanceof ErrorEvent) {\r\n          // client-side error\r\n          errorMessage = `Error: ${error.error.message}`;\r\n        } else if (error.error.status) {\r\n          // server-side error\r\n          errorMessage = `Error Code: ${error.error.status}\\nMessage: ${error.error.message}`;\r\n        } else {\r\n          // server-side error\r\n          errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n        }\r\n        window.alert(errorMessage); // Show error gracefully, instead of alert window\r\n        return throwError(errorMessage);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { IEnvironment } from '../modal/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EnvironmentService implements IEnvironment {\n  constructor() {}\n\n  get apiUrl() {\n    return environment.apiUrl;\n  }\n\n  get production() {\n    return environment.production;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2stcGxhbm5lci9kaWFsb2dzL2NvbmZpcm0tZGlhbG9ncy9jb25maXJtLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\";","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n} from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n/**\r\n * Component to get the user confirmation before deteling a tasklist or task.\r\n */\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'confirm-dialog',\r\n  styleUrls: ['confirm-dialog.component.scss'],\r\n  templateUrl: 'confirm-dialog.component.html',\r\n\r\n})\r\nexport class ConfirmDialogComponent {\r\n  @Input() public title: string;\r\n  @Output() public isDelete: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(public activeModal: NgbActiveModal) { }\r\n\r\n  /**\r\n   * Method to handle the click for `Yes` action\r\n   */\r\n  public deleteClick() {\r\n    this.isDelete.emit(true);\r\n    this.activeModal.close();\r\n  }\r\n}\r\n","export default \".red {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbWl0ZXNoL2Fob21lL3Byb2plY3RzL3R0L3Rhc2stcGxhbm5lci9zcmMvYXBwL3Rhc2stcGxhbm5lci9kaWFsb2dzL2lucHV0LWRpYWxvZ3MvaW5wdXQtZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC90YXNrLXBsYW5uZXIvZGlhbG9ncy9pbnB1dC1kaWFsb2dzL2lucHV0LWRpYWxvZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL3Rhc2stcGxhbm5lci9kaWFsb2dzL2lucHV0LWRpYWxvZ3MvaW5wdXQtZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlZCB7XHJcbiAgY29sb3I6IHJlZDtcclxufSIsIi5yZWQge1xuICBjb2xvcjogcmVkO1xufSJdfQ== */\";","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n} from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n/**\r\n * Component to get the user input for adding new tasklist or task\r\n */\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'input-dialog',\r\n\r\n  styleUrls: ['input-dialog.component.scss'],\r\n  templateUrl: './input-dialog.component.html',\r\n\r\n})\r\nexport class InputDialogComponent {\r\n  @Input() public title: string;\r\n  @Output() public submit: EventEmitter<any> = new EventEmitter();\r\n\r\n  public input = new FormControl('', [\r\n    Validators.required,\r\n    Validators.pattern(/([\\S]+[\\s]*)*[\\S]+/), // Accept non-whitespace text on both ends\r\n  ]);\r\n\r\n  constructor(public activeModal: NgbActiveModal) { }\r\n\r\n  set initialValue(value: string) {\r\n    this.input.setValue(value);\r\n  }\r\n\r\n  /**\r\n   * Method to create the taskList or task\r\n   */\r\n  public create() {\r\n    this.submit.emit(this.input.value);\r\n    this.activeModal.close();\r\n  }\r\n}\r\n","\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { EnvironmentService } from 'src/app/services/environment.service';\r\nimport { IMoveEvent } from '../modal/moveevent';\r\nimport { ITaskList } from '../modal/task-list';\r\n\r\n/**\r\n * Hearder option for http request to set the key-values into header\r\n */\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json; charset=UTF-8',\r\n  }),\r\n};\r\n\r\n@Injectable()\r\nexport class TaskListService {\r\n  // TaskList resource api end point. It can be put in a constant config file.\r\n  public taskListUrl;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private environmentService: EnvironmentService,\r\n  ) {\r\n    this.taskListUrl = this.environmentService.apiUrl;\r\n  }\r\n\r\n  /**\r\n   * API service method to get the all task list and it's tasks.\r\n   */\r\n  public get(): Observable<ITaskList[]> {\r\n    return this.http.get<ITaskList[]>(`${this.taskListUrl}`);\r\n  }\r\n\r\n  /**\r\n   * API service method to add new task\r\n   * @param taskList : TaskList object\r\n   */\r\n  public post(taskList: ITaskList): Observable<ITaskList[]> {\r\n    return this.http.post<ITaskList[]>(this.taskListUrl, taskList, httpOptions);\r\n  }\r\n\r\n  /**\r\n   * API service method to update the tasklist\r\n   * @param taskList : TaskList object\r\n   */\r\n  public put(taskList: ITaskList): Observable<ITaskList[]> {\r\n    return this.http.put<ITaskList[]>(this.taskListUrl, taskList, httpOptions);\r\n  }\r\n\r\n  /**\r\n   * API service method to delete a task list for given id\r\n   * @param taskList : TaskList object\r\n   */\r\n  public delete(taskList: ITaskList): Observable<ITaskList[]> {\r\n    return this.http.delete<ITaskList[]>(\r\n      `${this.taskListUrl}/${taskList._id}`,\r\n      httpOptions,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Method to move the dragged item to back to original list if there is any error.\r\n   * @param taskLists: Object\r\n   * @param event: Object\r\n   */\r\n  public move(taskLists: ITaskList[], event: IMoveEvent) {\r\n    const fromTaskList = (taskLists || []).find((taskList) => {\r\n      return taskList._id === event.fromTaskListId;\r\n    });\r\n\r\n    const toTaskList = (taskLists || []).find((taskList) => {\r\n      return taskList._id === event.toTaskListId;\r\n    });\r\n\r\n    const task = ((toTaskList && toTaskList.tasks) || []).find((item) => {\r\n      return item._id === event.taskId;\r\n    });\r\n\r\n    if (task) {\r\n      // Revove the task from new list\r\n      toTaskList.tasks.splice(event.newIndex, 1);\r\n      // Add task to old list\r\n      fromTaskList.tasks.splice(event.oldIndex, 0, task);\r\n    }\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { EnvironmentService } from 'src/app/services/environment.service';\nimport { ITask } from '../modal/task';\nimport { ITaskList } from '../modal/task-list';\n\n/**\n * Hearder option for http request to set the key-values into header\n */\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json; charset=UTF-8',\n  }),\n};\n\n@Injectable()\nexport class TaskService {\n  // TaskList resource api end point. It can be put in a constant config file.\n  // public taskListUrl = 'http://localhost:3000/tasks-list';\n  public taskListUrl;\n\n  constructor(\n    private http: HttpClient,\n    private environmentService: EnvironmentService,\n  ) {\n    this.taskListUrl = this.environmentService.apiUrl;\n  }\n\n  /**\n   * API service method to get the all tasks of given tasklist id\n   * @param taskListId  : TaskList id\n   */\n  public get(taskListId: string): Observable<ITask[]> {\n    return this.http.get<ITask[]>(`${this.taskListUrl}\\/${taskListId}\\/tasks`);\n  }\n\n  /**\n   * API service method to add a new task under the given task list id.\n   * @param taskListId  : TaskList id\n   * @param task  : ITask\n   */\n  public post(taskListId: string, task: ITask): Observable<ITaskList> {\n    return this.http.post<ITaskList>(\n      `${this.taskListUrl}\\/${taskListId}\\/tasks`,\n      task,\n      httpOptions,\n    );\n  }\n\n  /**\n   * API service method to update the task details of given task id and it's task list id.\n   * @param taskListId  : TaskList id\n   * @param task  : ITask\n   */\n  public put(taskListId: string, task: ITask): Observable<ITaskList> {\n    return this.http.put<ITaskList>(\n      `${this.taskListUrl}\\/${taskListId}\\/tasks\\/${task._id}`,\n      task,\n      httpOptions,\n    );\n  }\n\n  /**\n   * API service method to delete a task from a task list.\n   * @param taskListId  : TaskList id\n   * @param task  : ITask\n   */\n  public delete(taskListId: string, task: ITask): Observable<ITaskList> {\n    return this.http.delete<ITaskList>(\n      `${this.taskListUrl}\\/${taskListId}\\/tasks\\/${task._id}`,\n      httpOptions,\n    );\n  }\n}\n","export default \".task {\\n  border: 1px solid #fafafa;\\n  margin: 2px;\\n}\\n\\n.sortable {\\n  background: #eee;\\n  border-radius: 0.25rem;\\n  min-height: 40px;\\n}\\n\\n.sortable.empty::after {\\n  content: \\\"Add or drop task here\\\";\\n  text-align: center;\\n  vertical-align: middle;\\n  line-height: 30px;\\n  color: #b7b7b7;\\n}\\n\\n.sortable:hover {\\n  background-color: #dedddd;\\n}\\n\\n.card {\\n  background-color: #ccdce6;\\n  border-radius: 4px;\\n  font-size: 0.9rem;\\n  margin-bottom: 8px;\\n  min-height: 33px;\\n  position: relative;\\n  overflow: hidden;\\n}\\n\\n.card .card-content {\\n  background-color: #fff;\\n  padding: 6px 8px;\\n  min-height: 33px;\\n}\\n\\n.card .card-content .truncate {\\n  max-width: 85%;\\n  display: inline-block;\\n}\\n\\n.card .delete-icon {\\n  float: right;\\n  color: #c3c3c3;\\n  cursor: pointer;\\n  text-decoration: none;\\n  display: none;\\n}\\n\\n.card .delete-icon:hover {\\n  color: #3a80de;\\n}\\n\\n.card:hover .delete-icon {\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbWl0ZXNoL2Fob21lL3Byb2plY3RzL3R0L3Rhc2stcGxhbm5lci9zcmMvYXBwL3Rhc2stcGxhbm5lci90YXNrLWxpc3QvdGFzay1saXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC90YXNrLXBsYW5uZXIvdGFzay1saXN0L3Rhc2stbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQTtFQUNFLHlCQUFBO0VBQ0EsV0FBQTtBQ1BGOztBRFVBO0VBQ0UsZ0JBVGM7RUFVZCxzQkFBQTtFQUNBLGdCQUFBO0FDUEY7O0FEVUU7RUFDRSxnQ0FBQTtFQUNBLGtCQUFBO0VBQ0Esc0JBQUE7RUFDQSxpQkFBQTtFQUNBLGNBcEJVO0FDWWQ7O0FEVUU7RUFDRSx5QkFBQTtBQ1JKOztBRGFBO0VBQ0UseUJBaENpQjtFQWlDakIsa0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0FDVkY7O0FEWUU7RUFDRSxzQkExQ0k7RUEyQ0osZ0JBQUE7RUFDQSxnQkFBQTtBQ1ZKOztBRFlJO0VBQ0UsY0FBQTtFQUNBLHFCQUFBO0FDVk47O0FEY0U7RUFDRSxZQUFBO0VBQ0EsY0FwRFc7RUFxRFgsZUFBQTtFQUNBLHFCQUFBO0VBQ0EsYUFBQTtBQ1pKOztBRGNJO0VBQ0UsY0F6RGE7QUM2Q25COztBRGdCRTtFQUNFLGNBQUE7QUNkSiIsImZpbGUiOiJzcmMvYXBwL3Rhc2stcGxhbm5lci90YXNrLWxpc3QvdGFzay1saXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiJHdoaXRlOiAjZmZmO1xyXG4kY29sb3JfYm90dGljZWxsaTogI2NjZGNlNjtcclxuJGNvbG9yX3NpbHZlcjogI2MzYzNjMztcclxuJGNvbG9yX3JveWFsX2JsdWU6ICMzYTgwZGU7XHJcbiRjb2xvcl9ub2JlbDogI2I3YjdiNztcclxuJGNvbG9yX2dhbGxlcnk6ICNlZWU7XHJcbiRhbGFiYXN0ZXI6ICNmYWZhZmE7XHJcblxyXG4udGFzayB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgJGFsYWJhc3RlcjtcclxuICBtYXJnaW46IDJweDtcclxufVxyXG5cclxuLnNvcnRhYmxlIHtcclxuICBiYWNrZ3JvdW5kOiAkY29sb3JfZ2FsbGVyeTtcclxuICBib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xyXG4gIG1pbi1oZWlnaHQ6IDQwcHg7XHJcbiAgLy8gYm9yZGVyOiAycHggZGFzaGVkIHRyYW5zcGFyZW50O1xyXG5cclxuICAmLmVtcHR5OjphZnRlciB7XHJcbiAgICBjb250ZW50OiBcIkFkZCBvciBkcm9wIHRhc2sgaGVyZVwiO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xyXG4gICAgY29sb3I6ICRjb2xvcl9ub2JlbDtcclxuICB9XHJcbiAgJjpob3ZlcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkZWRkZGQ7XHJcbiAgICAvLyBib3JkZXI6IDJweCBkYXNoZWQgI2ZmYmQ0NDtcclxuICB9XHJcbn1cclxuXHJcbi5jYXJkIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3JfYm90dGljZWxsaTtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgZm9udC1zaXplOiAwLjlyZW07XHJcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xyXG4gIG1pbi1oZWlnaHQ6IDMzcHg7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gIC5jYXJkLWNvbnRlbnQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xyXG4gICAgcGFkZGluZzogNnB4IDhweDtcclxuICAgIG1pbi1oZWlnaHQ6IDMzcHg7XHJcblxyXG4gICAgLnRydW5jYXRlIHtcclxuICAgICAgbWF4LXdpZHRoOiA4NSU7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5kZWxldGUtaWNvbiB7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICBjb2xvcjogJGNvbG9yX3NpbHZlcjtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcblxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgIGNvbG9yOiAkY29sb3Jfcm95YWxfYmx1ZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICY6aG92ZXIgLmRlbGV0ZS1pY29uIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gIH1cclxufVxyXG4iLCIudGFzayB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNmYWZhZmE7XG4gIG1hcmdpbjogMnB4O1xufVxuXG4uc29ydGFibGUge1xuICBiYWNrZ3JvdW5kOiAjZWVlO1xuICBib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xuICBtaW4taGVpZ2h0OiA0MHB4O1xufVxuLnNvcnRhYmxlLmVtcHR5OjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiQWRkIG9yIGRyb3AgdGFzayBoZXJlXCI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gIGNvbG9yOiAjYjdiN2I3O1xufVxuLnNvcnRhYmxlOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RlZGRkZDtcbn1cblxuLmNhcmQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NkY2U2O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGZvbnQtc2l6ZTogMC45cmVtO1xuICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gIG1pbi1oZWlnaHQ6IDMzcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5jYXJkIC5jYXJkLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBwYWRkaW5nOiA2cHggOHB4O1xuICBtaW4taGVpZ2h0OiAzM3B4O1xufVxuLmNhcmQgLmNhcmQtY29udGVudCAudHJ1bmNhdGUge1xuICBtYXgtd2lkdGg6IDg1JTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuLmNhcmQgLmRlbGV0ZS1pY29uIHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBjb2xvcjogI2MzYzNjMztcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uY2FyZCAuZGVsZXRlLWljb246aG92ZXIge1xuICBjb2xvcjogIzNhODBkZTtcbn1cbi5jYXJkOmhvdmVyIC5kZWxldGUtaWNvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufSJdfQ== */\";","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Options } from 'sortablejs';\r\n\r\nimport { ConfirmDialogComponent } from '../dialogs/confirm-dialogs/confirm-dialog.component';\r\nimport { InputDialogComponent } from '../dialogs/input-dialogs/input-dialog.component';\r\nimport { IMoveEvent } from '../modal/moveevent';\r\nimport { ITask } from '../modal/task';\r\nimport { ITaskList } from '../modal/task-list';\r\nimport { TaskService } from '../sevices/task.service';\r\n\r\n/**\r\n * Task component to render the individual task\r\n */\r\n@Component({\r\n  selector: 'task-list',\r\n  styleUrls: ['./task-list.component.scss'],\r\n  templateUrl: './task-list.component.html',\r\n})\r\nexport class TaskListComponent implements OnInit {\r\n  // Task list to hold the all tasks and it's properties\r\n  @Input() public taskList: ITaskList;\r\n  @Output() public errorOnMove = new EventEmitter<IMoveEvent>();\r\n\r\n  private tasks: ITask[];\r\n\r\n  /**\r\n   * Set Sortablejs configuration for group name and callbacks\r\n   */\r\n  private sortableOptions: Options = {\r\n    group: 'task-planner-group',\r\n    onAdd: (event: any) => {\r\n      this.onAddTaskByDragAndDrop(event);\r\n    },\r\n    onRemove: (event: any) => {\r\n      this.onRemoveTaskByDragAndDrop(event);\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    public dialogService: NgbModal,\r\n    private taskService: TaskService,\r\n  ) { }\r\n\r\n  public ngOnInit() {\r\n    this.tasks = this.taskList.tasks || [];\r\n  }\r\n\r\n  /**\r\n   * Method to call on adding a task from one list to other list.\r\n   * @param event : event object\r\n   */\r\n  private onAddTaskByDragAndDrop(event: any) {\r\n    let toTaskListId: string;\r\n    let fromTaskListId: string;\r\n    let task: ITask;\r\n    try {\r\n      toTaskListId = this.taskList._id;\r\n      task = this.tasks[event.newIndex];\r\n      fromTaskListId = event.from.getAttribute('data-id');\r\n      this.taskService\r\n        .post(toTaskListId, task)\r\n        .subscribe((taskList: ITaskList) => { },\r\n          (err) => {\r\n            this.errorOnMove.emit({\r\n              fromTaskListId,\r\n              newIndex: event.newIndex,\r\n              oldIndex: event.oldIndex,\r\n              taskId: task._id,\r\n              toTaskListId,\r\n            } as IMoveEvent);\r\n          });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to call on removing a task from one list to other list.\r\n   * @param event : event object\r\n   */\r\n  private onRemoveTaskByDragAndDrop(event: any) {\r\n    let fromTaskListId: string;\r\n    let toTaskListId: string;\r\n    let taskId: string;\r\n    try {\r\n      fromTaskListId = this.taskList._id;\r\n      taskId = event.item.getAttribute('data-id');\r\n      toTaskListId = event.to.getAttribute('data-id');\r\n\r\n      this.taskService\r\n        .delete(fromTaskListId, { _id: taskId, name: null })\r\n        .subscribe((taskList: ITaskList) => { },\r\n          (err) => {\r\n            // let task = <ITask>JSON.parse(event.item.getAttribute('data-task'));\r\n            this.errorOnMove.emit({\r\n              fromTaskListId,\r\n              newIndex: event.newIndex,\r\n              oldIndex: event.oldIndex,\r\n              taskId,\r\n              toTaskListId,\r\n            } as IMoveEvent);\r\n          });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  public taskStringfy(task: ITask) {\r\n    return JSON.stringify(task);\r\n  }\r\n\r\n  /**\r\n   * Open a popup to add a new task to selected task list.\r\n   */\r\n  public addTask() {\r\n    const dialogObj = this.dialogService.open(InputDialogComponent, {\r\n      backdrop: 'static',\r\n    });\r\n    dialogObj.componentInstance.title = 'Add new task';\r\n    dialogObj.componentInstance.submit.subscribe((taskName: string) => {\r\n      try {\r\n        this.taskService\r\n          .post(this.taskList._id, { name: taskName })\r\n          .subscribe((taskList) => {\r\n            this.taskList = taskList;\r\n            this.tasks = this.taskList.tasks;\r\n          });\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Open a confirmation popup to delete the selected task\r\n   * @param taskToDelete : task object\r\n   */\r\n  public onDelete(taskToDelete: ITask) {\r\n    const dialogObj = this.dialogService.open(ConfirmDialogComponent, {\r\n      backdrop: 'static',\r\n    });\r\n    dialogObj.componentInstance.title = 'Delete task';\r\n    dialogObj.componentInstance.isDelete.subscribe((deleteTask: boolean) => {\r\n      try {\r\n        if (deleteTask) {\r\n          this.taskService\r\n            .delete(this.taskList._id, taskToDelete)\r\n            .subscribe((taskList: ITaskList) => {\r\n              this.taskList = taskList;\r\n              this.tasks = this.taskList.tasks;\r\n            });\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \".task-planner {\\n  margin: 10px 0 30px 0;\\n  border-radius: 16px;\\n  cursor: default;\\n  font-size: 1rem;\\n  overflow: hidden;\\n  padding: 18px;\\n  text-align: left;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n}\\n.task-planner .header {\\n  color: #222;\\n  padding-bottom: 16px;\\n}\\n.task-planner .header h3.title {\\n  display: inline-block;\\n  font-size: 1.25rem;\\n  letter-spacing: 1px;\\n  margin: 0;\\n  background: #0b568b;\\n  border-radius: 6px;\\n  color: #fff;\\n  padding: 9px 15px;\\n}\\n.task-planner .task-board {\\n  min-width: 100%;\\n}\\n.task-planner .task-board .lists {\\n  margin: 0 10px 5px 0;\\n  display: flex;\\n  flex-direction: row;\\n  overflow: auto;\\n}\\n.task-planner .task-board .lists .list {\\n  background-color: #e5eff5;\\n  border-radius: 6px;\\n  box-shadow: 1px 3px 5px 0px rgba(0, 0, 0, 0.29);\\n  padding: 8px;\\n  border: 1px solid #fff;\\n  margin: 5px;\\n  width: 25%;\\n  min-width: 200px;\\n  max-width: 300px;\\n}\\n.task-planner .task-board .lists .list:first-child {\\n  margin-left: 0px;\\n}\\n.task-planner .task-board .lists .list h5 {\\n  font-size: 1rem;\\n  letter-spacing: 0.5px;\\n  margin: 0 0 8px 3px;\\n  display: inline-block;\\n  text-transform: capitalize;\\n  width: 90%;\\n}\\n.delete-icon {\\n  float: right;\\n  color: #c3c3c3;\\n  cursor: pointer;\\n  text-decoration: none;\\n}\\n.delete-icon:hover {\\n  color: #f95454;\\n}\\na.add-list {\\n  margin-top: 6px;\\n  color: #fff;\\n  margin-left: 32px;\\n}\\n.lists .empty-tasklist {\\n  display: none;\\n  margin: 20px 0px;\\n}\\n.lists.empty .empty-tasklist {\\n  display: block;\\n}\\n.hints {\\n  background-color: #0c0c0c3b;\\n  padding: 10px;\\n  border-radius: 5px;\\n  display: inline-block;\\n  margin-top: 15%;\\n}\\n.hints h6, .hints li {\\n  font-size: 0.8rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbWl0ZXNoL2Fob21lL3Byb2plY3RzL3R0L3Rhc2stcGxhbm5lci9zcmMvYXBwL3Rhc2stcGxhbm5lci90YXNrLXBsYW5uZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3Rhc2stcGxhbm5lci90YXNrLXBsYW5uZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBU0E7RUFDRSxxQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGFBQUE7RUFDQSxnQkFBQTtFQUNBLHlCQUFBO0tBQUEsc0JBQUE7TUFBQSxxQkFBQTtVQUFBLGlCQUFBO0FDUkY7QURVRTtFQUNFLFdBbkJlO0VBb0JmLG9CQUFBO0FDUko7QURVSTtFQUNFLHFCQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtFQUNBLFNBQUE7RUFDQSxtQkFyQnFCO0VBc0JyQixrQkFBQTtFQUNBLFdBNUJFO0VBNkJGLGlCQUFBO0FDUk47QURZRTtFQUNFLGVBQUE7QUNWSjtBRFlJO0VBQ0Usb0JBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxjQUFBO0FDVk47QURZTTtFQUNFLHlCQXZDZTtFQXdDZixrQkFBQTtFQUNBLCtDQUFBO0VBQ0EsWUFBQTtFQUNBLHNCQUFBO0VBQ0EsV0FBQTtFQUNBLFVBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FDVlI7QURZUTtFQUNFLGdCQUFBO0FDVlY7QURhUTtFQUNFLGVBQUE7RUFDQSxxQkFBQTtFQUNBLG1CQUFBO0VBQ0EscUJBQUE7RUFDQSwwQkFBQTtFQUNBLFVBQUE7QUNYVjtBRGtCQTtFQUNFLFlBQUE7RUFDQSxjQXRFYTtFQXVFYixlQUFBO0VBQ0EscUJBQUE7QUNmRjtBRGlCRTtFQUNFLGNBMUVrQjtBQzJEdEI7QURtQkE7RUFDRSxlQUFBO0VBQ0EsV0FuRk07RUFvRk4saUJBQUE7QUNoQkY7QURtQkE7RUFDRSxhQUFBO0VBQ0EsZ0JBQUE7QUNoQkY7QURtQkE7RUFDRSxjQUFBO0FDaEJGO0FEbUJBO0VBQ0UsMkJBQUE7RUFDQSxhQUFBO0VBQ0Esa0JBQUE7RUFDQSxxQkFBQTtFQUNBLGVBQUE7QUNoQkY7QURpQkU7RUFDRSxpQkFBQTtBQ2ZKIiwiZmlsZSI6InNyYy9hcHAvdGFzay1wbGFubmVyL3Rhc2stcGxhbm5lci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vY29sb3JzXHJcbiRjb2xvcl9taW5lX3NoYWZ0OiAjMjIyO1xyXG4kd2hpdGU6ICNmZmY7XHJcbiRibGFja18yOTogcmdiYSgwLCAwLCAwLCAwLjI5KTtcclxuJGNvbG9yX3NpbHZlcjogI2MzYzNjMztcclxuJGNvbG9yX3N1bnNldF9vcmFuZ2U6ICNmOTU0NTQ7XHJcbiRjb2xvcl9jYXRza2lsbF93aGl0ZTogI2U1ZWZmNTtcclxuJGNvbG9yX3ZlbmljZV9ibHVlX2FwcHJveDogIzBiNTY4YjtcclxuXHJcbi50YXNrLXBsYW5uZXIge1xyXG4gIG1hcmdpbjogMTBweCAwIDMwcHggMDtcclxuICBib3JkZXItcmFkaXVzOiAxNnB4O1xyXG4gIGN1cnNvcjogZGVmYXVsdDtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBwYWRkaW5nOiAxOHB4O1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcblxyXG4gIC5oZWFkZXIge1xyXG4gICAgY29sb3I6ICRjb2xvcl9taW5lX3NoYWZ0O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDE2cHg7XHJcblxyXG4gICAgaDMudGl0bGUge1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcclxuICAgICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcclxuICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICBiYWNrZ3JvdW5kOiAkY29sb3JfdmVuaWNlX2JsdWVfYXBwcm94O1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA2cHg7XHJcbiAgICAgIGNvbG9yOiAkd2hpdGU7XHJcbiAgICAgIHBhZGRpbmc6IDlweCAxNXB4O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnRhc2stYm9hcmQge1xyXG4gICAgbWluLXdpZHRoOiAxMDAlO1xyXG5cclxuICAgIC5saXN0cyB7XHJcbiAgICAgIG1hcmdpbjogMCAxMHB4IDVweCAwO1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICBvdmVyZmxvdzogYXV0bztcclxuXHJcbiAgICAgIC5saXN0IHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3JfY2F0c2tpbGxfd2hpdGU7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDFweCAzcHggNXB4IDBweCAkYmxhY2tfMjk7XHJcbiAgICAgICAgcGFkZGluZzogOHB4O1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICR3aGl0ZTtcclxuICAgICAgICBtYXJnaW46IDVweDtcclxuICAgICAgICB3aWR0aDogMjUlO1xyXG4gICAgICAgIG1pbi13aWR0aDogMjAwcHg7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAzMDBweDtcclxuXHJcbiAgICAgICAgJjpmaXJzdC1jaGlsZCB7XHJcbiAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaDUge1xyXG4gICAgICAgICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuNXB4O1xyXG4gICAgICAgICAgbWFyZ2luOiAwIDAgOHB4IDNweDtcclxuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xyXG4gICAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5kZWxldGUtaWNvbiB7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG4gIGNvbG9yOiAkY29sb3Jfc2lsdmVyO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcblxyXG4gICY6aG92ZXIge1xyXG4gICAgY29sb3I6ICRjb2xvcl9zdW5zZXRfb3JhbmdlO1xyXG4gIH1cclxufVxyXG5cclxuYS5hZGQtbGlzdCB7XHJcbiAgbWFyZ2luLXRvcDogNnB4O1xyXG4gIGNvbG9yOiAkd2hpdGU7XHJcbiAgbWFyZ2luLWxlZnQ6IDMycHg7XHJcbn1cclxuXHJcbi5saXN0cyAuZW1wdHktdGFza2xpc3R7XHJcbiAgZGlzcGxheTogbm9uZTtcclxuICBtYXJnaW46IDIwcHggMHB4O1xyXG59XHJcblxyXG4ubGlzdHMuZW1wdHkgLmVtcHR5LXRhc2tsaXN0e1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4uaGludHN7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzBjMGMwYzNiO1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBtYXJnaW4tdG9wOiAxNSU7XHJcbiAgaDYsIGxpe1xyXG4gICAgZm9udC1zaXplOiAwLjhyZW07XHJcbiAgfVxyXG59XHJcbiIsIi50YXNrLXBsYW5uZXIge1xuICBtYXJnaW46IDEwcHggMCAzMHB4IDA7XG4gIGJvcmRlci1yYWRpdXM6IDE2cHg7XG4gIGN1cnNvcjogZGVmYXVsdDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAxOHB4O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cbi50YXNrLXBsYW5uZXIgLmhlYWRlciB7XG4gIGNvbG9yOiAjMjIyO1xuICBwYWRkaW5nLWJvdHRvbTogMTZweDtcbn1cbi50YXNrLXBsYW5uZXIgLmhlYWRlciBoMy50aXRsZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udC1zaXplOiAxLjI1cmVtO1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICBtYXJnaW46IDA7XG4gIGJhY2tncm91bmQ6ICMwYjU2OGI7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgY29sb3I6ICNmZmY7XG4gIHBhZGRpbmc6IDlweCAxNXB4O1xufVxuLnRhc2stcGxhbm5lciAudGFzay1ib2FyZCB7XG4gIG1pbi13aWR0aDogMTAwJTtcbn1cbi50YXNrLXBsYW5uZXIgLnRhc2stYm9hcmQgLmxpc3RzIHtcbiAgbWFyZ2luOiAwIDEwcHggNXB4IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuLnRhc2stcGxhbm5lciAudGFzay1ib2FyZCAubGlzdHMgLmxpc3Qge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTVlZmY1O1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIGJveC1zaGFkb3c6IDFweCAzcHggNXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMjkpO1xuICBwYWRkaW5nOiA4cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XG4gIG1hcmdpbjogNXB4O1xuICB3aWR0aDogMjUlO1xuICBtaW4td2lkdGg6IDIwMHB4O1xuICBtYXgtd2lkdGg6IDMwMHB4O1xufVxuLnRhc2stcGxhbm5lciAudGFzay1ib2FyZCAubGlzdHMgLmxpc3Q6Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4tbGVmdDogMHB4O1xufVxuLnRhc2stcGxhbm5lciAudGFzay1ib2FyZCAubGlzdHMgLmxpc3QgaDUge1xuICBmb250LXNpemU6IDFyZW07XG4gIGxldHRlci1zcGFjaW5nOiAwLjVweDtcbiAgbWFyZ2luOiAwIDAgOHB4IDNweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgd2lkdGg6IDkwJTtcbn1cblxuLmRlbGV0ZS1pY29uIHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBjb2xvcjogI2MzYzNjMztcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG4uZGVsZXRlLWljb246aG92ZXIge1xuICBjb2xvcjogI2Y5NTQ1NDtcbn1cblxuYS5hZGQtbGlzdCB7XG4gIG1hcmdpbi10b3A6IDZweDtcbiAgY29sb3I6ICNmZmY7XG4gIG1hcmdpbi1sZWZ0OiAzMnB4O1xufVxuXG4ubGlzdHMgLmVtcHR5LXRhc2tsaXN0IHtcbiAgZGlzcGxheTogbm9uZTtcbiAgbWFyZ2luOiAyMHB4IDBweDtcbn1cblxuLmxpc3RzLmVtcHR5IC5lbXB0eS10YXNrbGlzdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uaGludHMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGMwYzBjM2I7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tdG9wOiAxNSU7XG59XG4uaGludHMgaDYsIC5oaW50cyBsaSB7XG4gIGZvbnQtc2l6ZTogMC44cmVtO1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { ConfirmDialogComponent } from './dialogs/confirm-dialogs/confirm-dialog.component';\r\nimport { InputDialogComponent } from './dialogs/input-dialogs/input-dialog.component';\r\nimport { ITask } from './modal/task';\r\nimport { ITaskList } from './modal/task-list';\r\nimport { TaskListService } from './sevices/task-list.service';\r\n\r\n/**\r\n * Task list component to render the each task list and it's task inside it.\r\n */\r\n@Component({\r\n  selector: 'task-planner',\r\n  styleUrls: ['./task-planner.component.scss'],\r\n  templateUrl: './task-planner.component.html',\r\n})\r\nexport class TaskPlannerComponent implements OnInit {\r\n  public taskLists: Array<ITaskList>;\r\n\r\n  constructor(\r\n    public dialogService: NgbModal,\r\n    private taskListService: TaskListService,\r\n  ) {\r\n    // Initialize the tasklist\r\n    this.taskLists = [];\r\n  }\r\n\r\n  public ngOnInit() {\r\n    // fetch the all task lists from the server\r\n    this.taskListService.get().subscribe((taskLists: ITaskList[]) => {\r\n      this.taskLists = taskLists;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Open a popup to add a new task list\r\n   */\r\n  public addList() {\r\n    const dialogObj = this.dialogService.open(InputDialogComponent, {\r\n      backdrop: 'static',\r\n    });\r\n\r\n    dialogObj.componentInstance.title = 'Add new task list';\r\n    dialogObj.componentInstance.submit.subscribe((listName: string) => {\r\n      this.taskListService\r\n        .post({ name: listName })\r\n        .subscribe((taskLists: ITaskList[]) => {\r\n          this.taskLists = taskLists;\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Open the confirmation poup to delete a task list along with it's task\r\n   * @param taskListToDelete : Task object\r\n   */\r\n  public deleteTaskList(taskListToDelete: ITaskList) {\r\n    const dialogObj = this.dialogService.open(ConfirmDialogComponent, {\r\n      backdrop: 'static',\r\n    });\r\n    dialogObj.componentInstance.title = 'Delete task list';\r\n    dialogObj.componentInstance.isDelete.subscribe((deleteList: boolean) => {\r\n      if (deleteList) {\r\n        this.taskListService\r\n          .delete(taskListToDelete)\r\n          .subscribe((taskLists: ITaskList[]) => {\r\n            this.taskLists = taskLists;\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  public errorOnMove(event) {\r\n    this.taskListService.move(this.taskLists, event);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SortablejsModule } from 'ngx-sortablejs';\n\nimport { ConfirmDialogComponent } from './dialogs/confirm-dialogs/confirm-dialog.component';\nimport { InputDialogComponent } from './dialogs/input-dialogs/input-dialog.component';\nimport { TaskListService } from './sevices/task-list.service';\nimport { TaskListComponent } from './task-list/task-list.component';\nimport { TaskPlannerComponent } from './task-planner.component';\n\n@NgModule({\n  declarations: [\n    TaskPlannerComponent,\n    TaskListComponent,\n    InputDialogComponent,\n    ConfirmDialogComponent,\n  ],\n  exports: [TaskPlannerComponent, TaskListComponent],\n  imports: [CommonModule, ReactiveFormsModule, NgbModule, SortablejsModule],\n  providers: [TaskListService],\n})\nexport class TaskPlannerModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport { IEnvironment } from '../app/modal/environment';\n\nconst apiUrl = 'http://localhost:3000/tasks-list';\n\nexport const environment: IEnvironment = {\n  apiUrl,\n  production: true,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}