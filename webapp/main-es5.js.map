{"version":3,"sources":["webpack:///src/app/app.component.html","webpack:///src/app/task-planner/dialogs/confirm-dialogs/confirm-dialog.component.html","webpack:///src/app/task-planner/dialogs/input-dialogs/input-dialog.component.html","webpack:///src/app/task-planner/task-list/task-list.component.html","webpack:///src/app/task-planner/task-planner.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.css","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/interceptors/app-http.interceptor.ts","webpack:///src/app/services/environment.service.ts","webpack:///src/app/task-planner/dialogs/confirm-dialogs/confirm-dialog.component.scss","webpack:///src/app/task-planner/dialogs/confirm-dialogs/confirm-dialog.component.ts","webpack:///src/app/task-planner/dialogs/input-dialogs/input-dialog.component.scss","webpack:///src/app/task-planner/dialogs/input-dialogs/input-dialog.component.ts","webpack:///src/app/task-planner/sevices/task-list.service.ts","webpack:///src/app/task-planner/sevices/task.service.ts","webpack:///src/app/task-planner/task-list/task-list.component.scss","webpack:///src/app/task-planner/task-list/task-list.component.ts","webpack:///src/app/task-planner/task-planner.component.scss","webpack:///src/app/task-planner/task-planner.component.ts","webpack:///src/app/task-planner/task-planner.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","template","AppModule","bootstrap","declarations","imports","providers","multi","provide","useClass","AppHttpInterceptor","request","next","authorizedRequest","clone","headers","set","has","handle","pipe","error","errorMessage","console","log","ErrorEvent","message","status","window","alert","EnvironmentService","apiUrl","production","providedIn","ConfirmDialogComponent","activeModal","isDelete","emit","close","changeDetection","OnPush","InputDialogComponent","submit","input","required","pattern","value","setValue","httpOptions","TaskListService","http","environmentService","taskListUrl","get","taskList","post","put","_id","taskLists","event","fromTaskList","find","fromTaskListId","toTaskList","toTaskListId","task","tasks","item","taskId","splice","newIndex","oldIndex","TaskService","taskListId","TaskListComponent","dialogService","taskService","errorOnMove","sortableOptions","group","onAdd","onAddTaskByDragAndDrop","onRemove","onRemoveTaskByDragAndDrop","from","getAttribute","subscribe","err","to","name","JSON","stringify","dialogObj","open","backdrop","componentInstance","title","taskName","taskToDelete","deleteTask","TaskPlannerComponent","taskListService","listName","taskListToDelete","deleteList","move","TaskPlannerModule","environment","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["export default \"<div>\\n  <task-planner></task-planner>\\n</div>\\n\";","export default \"<div>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{title}}</h4>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p>Are you sure?</p>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"activeModal.close(false)\\\">No</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"deleteClick()\\\">Yes</button>\\r\\n  </div>\\r\\n</div>\";","export default \"<div>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{title}}</h4>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p>Name</p>\\r\\n    <input id=\\\"name-input\\\" [formControl]=\\\"input\\\" type=\\\"text\\\" (keydown.enter)=\\\"input.valid && create()\\\">\\r\\n    <p class=\\\"small\\\" [class.text-danger]=\\\"input.invalid && input.dirty\\\" *ngIf=\\\"input.invalid && input.dirty\\\">Input can't\\r\\n      be blank.</p>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" id=\\\"cancel-btn\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"activeModal.close()\\\">Cancel</button>\\r\\n    <button type=\\\"button\\\" id=\\\"ok-btn\\\" class=\\\"btn\\\" [class.btn-outline-dark]=\\\"input.invalid\\\" [class.btn-primary]=\\\"input.valid\\\"\\r\\n      [class.disabled]=\\\"input.invalid\\\" [disabled]=\\\"input.invalid\\\" (click)=\\\"create()\\\">Ok</button>\\r\\n  </div>\\r\\n</div>\";","export default \"<div class=\\\"tasks\\\">\\r\\n  <div class=\\\"sortable\\\" [attr.data-id]=\\\"taskList._id\\\" [class.empty]=\\\"tasks.length === 0\\\" [sortablejs]=\\\"tasks\\\" [sortablejsOptions]=\\\"sortableOptions\\\">\\r\\n    <div class=\\\"card\\\" *ngFor=\\\"let task of tasks\\\" [attr.data-id]=\\\"task._id\\\" [attr.data-task]=\\\"taskStringfy(task)\\\">\\r\\n      <div tabindex=\\\"0\\\" [attr.aria-label]=\\\"task.name\\\" class=\\\"card-content\\\">\\r\\n        <span class=\\\"truncate\\\" title=\\\"{{ task.name }}\\\">{{ task.name }}</span>\\r\\n        <span class=\\\"clearfix\\\"><a href=\\\"#\\\" class=\\\"task-delete delete-icon\\\" (click)=\\\"onDelete(task)\\\"><i\\r\\n              class=\\\"fas fa-trash\\\"></i></a></span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <a href=\\\"#\\\" class=\\\"add-task-btn\\\" (click)=\\\"addTask()\\\">Add task</a>\\r\\n</div>\";","export default \"<div class=\\\"task-planner\\\">\\r\\n  <div class=\\\"header\\\">\\r\\n    <h3 class=\\\"title\\\"><i class=\\\"fas fa-tasks\\\"></i> Task Planner</h3>\\r\\n    <a href=\\\"#\\\" id=\\\"tasklist-add-button\\\" class=\\\"add-list\\\" (click)=\\\"addList()\\\">Add List</a>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"task-board clearfix\\\">\\r\\n    <div class=\\\"lists\\\" [class.empty]=\\\"taskLists.length === 0\\\">\\r\\n      <div class=\\\"list\\\" *ngFor=\\\"let tasklist of taskLists\\\">\\r\\n        <div class=\\\"clearfix\\\">\\r\\n          <span tabindex=\\\"0\\\" [attr.aria-label]=\\\"tasklist.name\\\">\\r\\n            <h5 class=\\\"truncate\\\" title=\\\"{{ tasklist.name }}\\\">\\r\\n              {{ tasklist.name }}\\r\\n            </h5>\\r\\n          </span>\\r\\n          <a href=\\\"#\\\" class=\\\"delete-icon\\\" (click)=\\\"deleteTaskList(tasklist)\\\">\\r\\n            <i class=\\\"fas fa-trash danger\\\"></i>\\r\\n          </a>\\r\\n        </div>\\r\\n        <task-list [taskList]=\\\"tasklist\\\" (errorOnMove)=\\\"errorOnMove($event)\\\"></task-list>\\r\\n      </div>\\r\\n      <div class=\\\"empty-tasklist\\\">\\r\\n        <h4>Welcome to your task planner board! <i class=\\\"fas fa-rocket\\\"></i></h4>\\r\\n        To add new task list click 'Add list' link above.\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"hints\\\" *ngIf=\\\"taskLists.length !== 0\\\">\\r\\n    <h6>Hints</h6>\\r\\n    <ul>\\r\\n      <li>Empty task list and task name is not allowed.</li>\\r\\n      <li>Duplicate task list and task name is allowed.</li>\\r\\n      <li>Task order is not maintained yet.</li>\\r\\n      <li>Drop the task in highlighted drop zone area between <br>Task list name and Add task link.</li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export default \"p {\\n  font-family: Lato;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBaUI7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInAge1xuICBmb250LWZhbWlseTogTGF0bztcbn0iXX0= */\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'my-app',\n  styleUrls: ['./app.component.css'],\n  templateUrl: './app.component.html',\n})\nexport class AppComponent { }\n","import { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { AppHttpInterceptor } from './interceptors/app-http.interceptor';\nimport { TaskListService } from './task-planner/sevices/task-list.service';\nimport { TaskService } from './task-planner/sevices/task.service';\nimport { TaskPlannerModule } from './task-planner/task-planner.module';\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [AppComponent],\n  imports: [BrowserModule, HttpClientModule, NgbModule, TaskPlannerModule],\n  providers: [\n    TaskListService,\n    TaskService,\n    {\n      multi: true,\n      provide: HTTP_INTERCEPTORS,\n      useClass: AppHttpInterceptor,\n    },\n  ],\n})\nexport class AppModule { }\n","import {\r\n  HttpErrorResponse,\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AppHttpInterceptor implements HttpInterceptor {\r\n  public intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler,\r\n  ): Observable<HttpEvent<any>> {\r\n    let authorizedRequest: HttpRequest<any>;\r\n\r\n    // Add header key-values to each request\r\n    authorizedRequest = request.clone({\r\n      headers: request.headers.set('Authorization', 'Bearer token'),\r\n    });\r\n\r\n    if (!authorizedRequest.headers.has('Content-Type')) {\r\n      authorizedRequest = authorizedRequest.clone({\r\n        headers: authorizedRequest.headers.set(\r\n          'Content-Type',\r\n          'application/json',\r\n        ),\r\n      });\r\n    }\r\n\r\n    authorizedRequest = authorizedRequest.clone({\r\n      headers: authorizedRequest.headers.set('Accept', 'application/json'),\r\n    });\r\n\r\n    /*\r\n     * Handle the error status code and messages at common place.\r\n     * Use dialog or toaster to show the messages .\r\n     * Use status code to design the error logging for server or for user.\r\n     */\r\n    return next.handle(authorizedRequest).pipe(\r\n      // Give a one more retry for slower devices\r\n      retry(1),\r\n      catchError((error: HttpErrorResponse) => {\r\n        let errorMessage = '';\r\n        console.log(error);\r\n        if (error.error instanceof ErrorEvent) {\r\n          // client-side error\r\n          errorMessage = `Error: ${error.error.message}`;\r\n        } else if (error.error.status) {\r\n          // server-side error\r\n          errorMessage = `Error Code: ${error.error.status}\\nMessage: ${error.error.message}`;\r\n        } else {\r\n          // server-side error\r\n          errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n        }\r\n        window.alert(errorMessage); // Show error gracefully, instead of alert window\r\n        return throwError(errorMessage);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { IEnvironment } from '../modal/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EnvironmentService implements IEnvironment {\n  constructor() {}\n\n  get apiUrl() {\n    return environment.apiUrl;\n  }\n\n  get production() {\n    return environment.production;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2stcGxhbm5lci9kaWFsb2dzL2NvbmZpcm0tZGlhbG9ncy9jb25maXJtLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\";","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n} from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n/**\r\n * Component to get the user confirmation before deteling a tasklist or task.\r\n */\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'confirm-dialog',\r\n  styleUrls: ['confirm-dialog.component.scss'],\r\n  templateUrl: 'confirm-dialog.component.html',\r\n\r\n})\r\nexport class ConfirmDialogComponent {\r\n  @Input() public title: string;\r\n  @Output() public isDelete: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(public activeModal: NgbActiveModal) { }\r\n\r\n  /**\r\n   * Method to handle the click for `Yes` action\r\n   */\r\n  public deleteClick() {\r\n    this.isDelete.emit(true);\r\n    this.activeModal.close();\r\n  }\r\n}\r\n","export default \".red {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbWl0ZXNoL2Fob21lL3Byb2plY3RzL3R0L3Rhc2stcGxhbm5lci9zcmMvYXBwL3Rhc2stcGxhbm5lci9kaWFsb2dzL2lucHV0LWRpYWxvZ3MvaW5wdXQtZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC90YXNrLXBsYW5uZXIvZGlhbG9ncy9pbnB1dC1kaWFsb2dzL2lucHV0LWRpYWxvZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL3Rhc2stcGxhbm5lci9kaWFsb2dzL2lucHV0LWRpYWxvZ3MvaW5wdXQtZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlZCB7XHJcbiAgY29sb3I6IHJlZDtcclxufSIsIi5yZWQge1xuICBjb2xvcjogcmVkO1xufSJdfQ== */\";","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n} from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n/**\r\n * Component to get the user input for adding new tasklist or task\r\n */\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'input-dialog',\r\n\r\n  styleUrls: ['input-dialog.component.scss'],\r\n  templateUrl: './input-dialog.component.html',\r\n\r\n})\r\nexport class InputDialogComponent {\r\n  @Input() public title: string;\r\n  @Output() public submit: EventEmitter<any> = new EventEmitter();\r\n\r\n  public input = new FormControl('', [\r\n    Validators.required,\r\n    Validators.pattern(/([\\S]+[\\s]*)*[\\S]+/), // Accept non-whitespace text on both ends\r\n  ]);\r\n\r\n  constructor(public activeModal: NgbActiveModal) { }\r\n\r\n  set initialValue(value: string) {\r\n    this.input.setValue(value);\r\n  }\r\n\r\n  /**\r\n   * Method to create the taskList or task\r\n   */\r\n  public create() {\r\n    this.submit.emit(this.input.value);\r\n    this.activeModal.close();\r\n  }\r\n}\r\n","\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { EnvironmentService } from 'src/app/services/environment.service';\r\nimport { IMoveEvent } from '../modal/moveevent';\r\nimport { ITaskList } from '../modal/task-list';\r\n\r\n/**\r\n * Hearder option for http request to set the key-values into header\r\n */\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json; charset=UTF-8',\r\n  }),\r\n};\r\n\r\n@Injectable()\r\nexport class TaskListService {\r\n  // TaskList resource api end point. It can be put in a constant config file.\r\n  public taskListUrl;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private environmentService: EnvironmentService,\r\n  ) {\r\n    this.taskListUrl = this.environmentService.apiUrl;\r\n  }\r\n\r\n  /**\r\n   * API service method to get the all task list and it's tasks.\r\n   */\r\n  public get(): Observable<ITaskList[]> {\r\n    return this.http.get<ITaskList[]>(`${this.taskListUrl}`);\r\n  }\r\n\r\n  /**\r\n   * API service method to add new task\r\n   * @param taskList : TaskList object\r\n   */\r\n  public post(taskList: ITaskList): Observable<ITaskList[]> {\r\n    return this.http.post<ITaskList[]>(this.taskListUrl, taskList, httpOptions);\r\n  }\r\n\r\n  /**\r\n   * API service method to update the tasklist\r\n   * @param taskList : TaskList object\r\n   */\r\n  public put(taskList: ITaskList): Observable<ITaskList[]> {\r\n    return this.http.put<ITaskList[]>(this.taskListUrl, taskList, httpOptions);\r\n  }\r\n\r\n  /**\r\n   * API service method to delete a task list for given id\r\n   * @param taskList : TaskList object\r\n   */\r\n  public delete(taskList: ITaskList): Observable<ITaskList[]> {\r\n    return this.http.delete<ITaskList[]>(\r\n      `${this.taskListUrl}/${taskList._id}`,\r\n      httpOptions,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Method to move the dragged item to back to original list if there is any error.\r\n   * @param taskLists: Object\r\n   * @param event: Object\r\n   */\r\n  public move(taskLists: ITaskList[], event: IMoveEvent) {\r\n    const fromTaskList = (taskLists || []).find((taskList) => {\r\n      return taskList._id === event.fromTaskListId;\r\n    });\r\n\r\n    const toTaskList = (taskLists || []).find((taskList) => {\r\n      return taskList._id === event.toTaskListId;\r\n    });\r\n\r\n    const task = ((toTaskList && toTaskList.tasks) || []).find((item) => {\r\n      return item._id === event.taskId;\r\n    });\r\n\r\n    if (task) {\r\n      // Revove the task from new list\r\n      toTaskList.tasks.splice(event.newIndex, 1);\r\n      // Add task to old list\r\n      fromTaskList.tasks.splice(event.oldIndex, 0, task);\r\n    }\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { EnvironmentService } from 'src/app/services/environment.service';\nimport { ITask } from '../modal/task';\nimport { ITaskList } from '../modal/task-list';\n\n/**\n * Hearder option for http request to set the key-values into header\n */\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json; charset=UTF-8',\n  }),\n};\n\n@Injectable()\nexport class TaskService {\n  // TaskList resource api end point. It can be put in a constant config file.\n  // public taskListUrl = 'http://localhost:3000/tasks-list';\n  public taskListUrl;\n\n  constructor(\n    private http: HttpClient,\n    private environmentService: EnvironmentService,\n  ) {\n    this.taskListUrl = this.environmentService.apiUrl;\n  }\n\n  /**\n   * API service method to get the all tasks of given tasklist id\n   * @param taskListId  : TaskList id\n   */\n  public get(taskListId: string): Observable<ITask[]> {\n    return this.http.get<ITask[]>(`${this.taskListUrl}\\/${taskListId}\\/tasks`);\n  }\n\n  /**\n   * API service method to add a new task under the given task list id.\n   * @param taskListId  : TaskList id\n   * @param task  : ITask\n   */\n  public post(taskListId: string, task: ITask): Observable<ITaskList> {\n    return this.http.post<ITaskList>(\n      `${this.taskListUrl}\\/${taskListId}\\/tasks`,\n      task,\n      httpOptions,\n    );\n  }\n\n  /**\n   * API service method to update the task details of given task id and it's task list id.\n   * @param taskListId  : TaskList id\n   * @param task  : ITask\n   */\n  public put(taskListId: string, task: ITask): Observable<ITaskList> {\n    return this.http.put<ITaskList>(\n      `${this.taskListUrl}\\/${taskListId}\\/tasks\\/${task._id}`,\n      task,\n      httpOptions,\n    );\n  }\n\n  /**\n   * API service method to delete a task from a task list.\n   * @param taskListId  : TaskList id\n   * @param task  : ITask\n   */\n  public delete(taskListId: string, task: ITask): Observable<ITaskList> {\n    return this.http.delete<ITaskList>(\n      `${this.taskListUrl}\\/${taskListId}\\/tasks\\/${task._id}`,\n      httpOptions,\n    );\n  }\n}\n","export default \".task {\\n  border: 1px solid #fafafa;\\n  margin: 2px;\\n}\\n\\n.sortable {\\n  background: #eee;\\n  border-radius: 0.25rem;\\n  min-height: 40px;\\n}\\n\\n.sortable.empty::after {\\n  content: \\\"Add or drop task here\\\";\\n  text-align: center;\\n  vertical-align: middle;\\n  line-height: 30px;\\n  color: #b7b7b7;\\n}\\n\\n.sortable:hover {\\n  background-color: #dedddd;\\n}\\n\\n.card {\\n  background-color: #ccdce6;\\n  border-radius: 4px;\\n  font-size: 0.9rem;\\n  margin-bottom: 8px;\\n  min-height: 33px;\\n  position: relative;\\n  overflow: hidden;\\n}\\n\\n.card .card-content {\\n  background-color: #fff;\\n  padding: 6px 8px;\\n  min-height: 33px;\\n}\\n\\n.card .card-content .truncate {\\n  max-width: 85%;\\n  display: inline-block;\\n}\\n\\n.card .delete-icon {\\n  float: right;\\n  color: #c3c3c3;\\n  cursor: pointer;\\n  text-decoration: none;\\n  display: none;\\n}\\n\\n.card .delete-icon:hover {\\n  color: #3a80de;\\n}\\n\\n.card:hover .delete-icon {\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbWl0ZXNoL2Fob21lL3Byb2plY3RzL3R0L3Rhc2stcGxhbm5lci9zcmMvYXBwL3Rhc2stcGxhbm5lci90YXNrLWxpc3QvdGFzay1saXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC90YXNrLXBsYW5uZXIvdGFzay1saXN0L3Rhc2stbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQTtFQUNFLHlCQUFBO0VBQ0EsV0FBQTtBQ1BGOztBRFVBO0VBQ0UsZ0JBVGM7RUFVZCxzQkFBQTtFQUNBLGdCQUFBO0FDUEY7O0FEVUU7RUFDRSxnQ0FBQTtFQUNBLGtCQUFBO0VBQ0Esc0JBQUE7RUFDQSxpQkFBQTtFQUNBLGNBcEJVO0FDWWQ7O0FEVUU7RUFDRSx5QkFBQTtBQ1JKOztBRGFBO0VBQ0UseUJBaENpQjtFQWlDakIsa0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0FDVkY7O0FEWUU7RUFDRSxzQkExQ0k7RUEyQ0osZ0JBQUE7RUFDQSxnQkFBQTtBQ1ZKOztBRFlJO0VBQ0UsY0FBQTtFQUNBLHFCQUFBO0FDVk47O0FEY0U7RUFDRSxZQUFBO0VBQ0EsY0FwRFc7RUFxRFgsZUFBQTtFQUNBLHFCQUFBO0VBQ0EsYUFBQTtBQ1pKOztBRGNJO0VBQ0UsY0F6RGE7QUM2Q25COztBRGdCRTtFQUNFLGNBQUE7QUNkSiIsImZpbGUiOiJzcmMvYXBwL3Rhc2stcGxhbm5lci90YXNrLWxpc3QvdGFzay1saXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiJHdoaXRlOiAjZmZmO1xyXG4kY29sb3JfYm90dGljZWxsaTogI2NjZGNlNjtcclxuJGNvbG9yX3NpbHZlcjogI2MzYzNjMztcclxuJGNvbG9yX3JveWFsX2JsdWU6ICMzYTgwZGU7XHJcbiRjb2xvcl9ub2JlbDogI2I3YjdiNztcclxuJGNvbG9yX2dhbGxlcnk6ICNlZWU7XHJcbiRhbGFiYXN0ZXI6ICNmYWZhZmE7XHJcblxyXG4udGFzayB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgJGFsYWJhc3RlcjtcclxuICBtYXJnaW46IDJweDtcclxufVxyXG5cclxuLnNvcnRhYmxlIHtcclxuICBiYWNrZ3JvdW5kOiAkY29sb3JfZ2FsbGVyeTtcclxuICBib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xyXG4gIG1pbi1oZWlnaHQ6IDQwcHg7XHJcbiAgLy8gYm9yZGVyOiAycHggZGFzaGVkIHRyYW5zcGFyZW50O1xyXG5cclxuICAmLmVtcHR5OjphZnRlciB7XHJcbiAgICBjb250ZW50OiBcIkFkZCBvciBkcm9wIHRhc2sgaGVyZVwiO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xyXG4gICAgY29sb3I6ICRjb2xvcl9ub2JlbDtcclxuICB9XHJcbiAgJjpob3ZlcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkZWRkZGQ7XHJcbiAgICAvLyBib3JkZXI6IDJweCBkYXNoZWQgI2ZmYmQ0NDtcclxuICB9XHJcbn1cclxuXHJcbi5jYXJkIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3JfYm90dGljZWxsaTtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgZm9udC1zaXplOiAwLjlyZW07XHJcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xyXG4gIG1pbi1oZWlnaHQ6IDMzcHg7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gIC5jYXJkLWNvbnRlbnQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xyXG4gICAgcGFkZGluZzogNnB4IDhweDtcclxuICAgIG1pbi1oZWlnaHQ6IDMzcHg7XHJcblxyXG4gICAgLnRydW5jYXRlIHtcclxuICAgICAgbWF4LXdpZHRoOiA4NSU7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5kZWxldGUtaWNvbiB7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICBjb2xvcjogJGNvbG9yX3NpbHZlcjtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcblxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgIGNvbG9yOiAkY29sb3Jfcm95YWxfYmx1ZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICY6aG92ZXIgLmRlbGV0ZS1pY29uIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gIH1cclxufVxyXG4iLCIudGFzayB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNmYWZhZmE7XG4gIG1hcmdpbjogMnB4O1xufVxuXG4uc29ydGFibGUge1xuICBiYWNrZ3JvdW5kOiAjZWVlO1xuICBib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xuICBtaW4taGVpZ2h0OiA0MHB4O1xufVxuLnNvcnRhYmxlLmVtcHR5OjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiQWRkIG9yIGRyb3AgdGFzayBoZXJlXCI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gIGNvbG9yOiAjYjdiN2I3O1xufVxuLnNvcnRhYmxlOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RlZGRkZDtcbn1cblxuLmNhcmQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NkY2U2O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGZvbnQtc2l6ZTogMC45cmVtO1xuICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gIG1pbi1oZWlnaHQ6IDMzcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5jYXJkIC5jYXJkLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBwYWRkaW5nOiA2cHggOHB4O1xuICBtaW4taGVpZ2h0OiAzM3B4O1xufVxuLmNhcmQgLmNhcmQtY29udGVudCAudHJ1bmNhdGUge1xuICBtYXgtd2lkdGg6IDg1JTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuLmNhcmQgLmRlbGV0ZS1pY29uIHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBjb2xvcjogI2MzYzNjMztcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uY2FyZCAuZGVsZXRlLWljb246aG92ZXIge1xuICBjb2xvcjogIzNhODBkZTtcbn1cbi5jYXJkOmhvdmVyIC5kZWxldGUtaWNvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufSJdfQ== */\";","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Options } from 'sortablejs';\r\n\r\nimport { ConfirmDialogComponent } from '../dialogs/confirm-dialogs/confirm-dialog.component';\r\nimport { InputDialogComponent } from '../dialogs/input-dialogs/input-dialog.component';\r\nimport { IMoveEvent } from '../modal/moveevent';\r\nimport { ITask } from '../modal/task';\r\nimport { ITaskList } from '../modal/task-list';\r\nimport { TaskService } from '../sevices/task.service';\r\n\r\n/**\r\n * Task component to render the individual task\r\n */\r\n@Component({\r\n  selector: 'task-list',\r\n  styleUrls: ['./task-list.component.scss'],\r\n  templateUrl: './task-list.component.html',\r\n})\r\nexport class TaskListComponent implements OnInit {\r\n  // Task list to hold the all tasks and it's properties\r\n  @Input() public taskList: ITaskList;\r\n  @Output() public errorOnMove = new EventEmitter<IMoveEvent>();\r\n\r\n  private tasks: ITask[];\r\n\r\n  /**\r\n   * Set Sortablejs configuration for group name and callbacks\r\n   */\r\n  private sortableOptions: Options = {\r\n    group: 'task-planner-group',\r\n    onAdd: (event: any) => {\r\n      this.onAddTaskByDragAndDrop(event);\r\n    },\r\n    onRemove: (event: any) => {\r\n      this.onRemoveTaskByDragAndDrop(event);\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    public dialogService: NgbModal,\r\n    private taskService: TaskService,\r\n  ) { }\r\n\r\n  public ngOnInit() {\r\n    this.tasks = this.taskList.tasks || [];\r\n  }\r\n\r\n  /**\r\n   * Method to call on adding a task from one list to other list.\r\n   * @param event : event object\r\n   */\r\n  private onAddTaskByDragAndDrop(event: any) {\r\n    let toTaskListId: string;\r\n    let fromTaskListId: string;\r\n    let task: ITask;\r\n    try {\r\n      toTaskListId = this.taskList._id;\r\n      task = this.tasks[event.newIndex];\r\n      fromTaskListId = event.from.getAttribute('data-id');\r\n      this.taskService\r\n        .post(toTaskListId, task)\r\n        .subscribe((taskList: ITaskList) => { },\r\n          (err) => {\r\n            this.errorOnMove.emit({\r\n              fromTaskListId,\r\n              newIndex: event.newIndex,\r\n              oldIndex: event.oldIndex,\r\n              taskId: task._id,\r\n              toTaskListId,\r\n            } as IMoveEvent);\r\n          });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to call on removing a task from one list to other list.\r\n   * @param event : event object\r\n   */\r\n  private onRemoveTaskByDragAndDrop(event: any) {\r\n    let fromTaskListId: string;\r\n    let toTaskListId: string;\r\n    let taskId: string;\r\n    try {\r\n      fromTaskListId = this.taskList._id;\r\n      taskId = event.item.getAttribute('data-id');\r\n      toTaskListId = event.to.getAttribute('data-id');\r\n\r\n      this.taskService\r\n        .delete(fromTaskListId, { _id: taskId, name: null })\r\n        .subscribe((taskList: ITaskList) => { },\r\n          (err) => {\r\n            // let task = <ITask>JSON.parse(event.item.getAttribute('data-task'));\r\n            this.errorOnMove.emit({\r\n              fromTaskListId,\r\n              newIndex: event.newIndex,\r\n              oldIndex: event.oldIndex,\r\n              taskId,\r\n              toTaskListId,\r\n            } as IMoveEvent);\r\n          });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  public taskStringfy(task: ITask) {\r\n    return JSON.stringify(task);\r\n  }\r\n\r\n  /**\r\n   * Open a popup to add a new task to selected task list.\r\n   */\r\n  public addTask() {\r\n    const dialogObj = this.dialogService.open(InputDialogComponent, {\r\n      backdrop: 'static',\r\n    });\r\n    dialogObj.componentInstance.title = 'Add new task';\r\n    dialogObj.componentInstance.submit.subscribe((taskName: string) => {\r\n      try {\r\n        this.taskService\r\n          .post(this.taskList._id, { name: taskName })\r\n          .subscribe((taskList) => {\r\n            this.taskList = taskList;\r\n            this.tasks = this.taskList.tasks;\r\n          });\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Open a confirmation popup to delete the selected task\r\n   * @param taskToDelete : task object\r\n   */\r\n  public onDelete(taskToDelete: ITask) {\r\n    const dialogObj = this.dialogService.open(ConfirmDialogComponent, {\r\n      backdrop: 'static',\r\n    });\r\n    dialogObj.componentInstance.title = 'Delete task';\r\n    dialogObj.componentInstance.isDelete.subscribe((deleteTask: boolean) => {\r\n      try {\r\n        if (deleteTask) {\r\n          this.taskService\r\n            .delete(this.taskList._id, taskToDelete)\r\n            .subscribe((taskList: ITaskList) => {\r\n              this.taskList = taskList;\r\n              this.tasks = this.taskList.tasks;\r\n            });\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \".task-planner {\\n  margin: 10px 0 30px 0;\\n  border-radius: 16px;\\n  cursor: default;\\n  font-size: 1rem;\\n  overflow: hidden;\\n  padding: 18px;\\n  text-align: left;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n}\\n.task-planner .header {\\n  color: #222;\\n  padding-bottom: 16px;\\n}\\n.task-planner .header h3.title {\\n  display: inline-block;\\n  font-size: 1.25rem;\\n  letter-spacing: 1px;\\n  margin: 0;\\n  background: #0b568b;\\n  border-radius: 6px;\\n  color: #fff;\\n  padding: 9px 15px;\\n}\\n.task-planner .task-board {\\n  min-width: 100%;\\n}\\n.task-planner .task-board .lists {\\n  margin: 0 10px 5px 0;\\n  display: flex;\\n  flex-direction: row;\\n  overflow: auto;\\n}\\n.task-planner .task-board .lists .list {\\n  background-color: #e5eff5;\\n  border-radius: 6px;\\n  box-shadow: 1px 3px 5px 0px rgba(0, 0, 0, 0.29);\\n  padding: 8px;\\n  border: 1px solid #fff;\\n  margin: 5px;\\n  width: 25%;\\n  min-width: 200px;\\n  max-width: 300px;\\n}\\n.task-planner .task-board .lists .list:first-child {\\n  margin-left: 0px;\\n}\\n.task-planner .task-board .lists .list h5 {\\n  font-size: 1rem;\\n  letter-spacing: 0.5px;\\n  margin: 0 0 8px 3px;\\n  display: inline-block;\\n  text-transform: capitalize;\\n  width: 90%;\\n}\\n.delete-icon {\\n  float: right;\\n  color: #c3c3c3;\\n  cursor: pointer;\\n  text-decoration: none;\\n}\\n.delete-icon:hover {\\n  color: #f95454;\\n}\\na.add-list {\\n  margin-top: 6px;\\n  color: #fff;\\n  margin-left: 32px;\\n}\\n.lists .empty-tasklist {\\n  display: none;\\n  margin: 20px 0px;\\n}\\n.lists.empty .empty-tasklist {\\n  display: block;\\n}\\n.hints {\\n  background-color: #0c0c0c3b;\\n  padding: 10px;\\n  border-radius: 5px;\\n  display: inline-block;\\n  margin-top: 15%;\\n}\\n.hints h6, .hints li {\\n  font-size: 0.8rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbWl0ZXNoL2Fob21lL3Byb2plY3RzL3R0L3Rhc2stcGxhbm5lci9zcmMvYXBwL3Rhc2stcGxhbm5lci90YXNrLXBsYW5uZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3Rhc2stcGxhbm5lci90YXNrLXBsYW5uZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBU0E7RUFDRSxxQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGFBQUE7RUFDQSxnQkFBQTtFQUNBLHlCQUFBO0tBQUEsc0JBQUE7TUFBQSxxQkFBQTtVQUFBLGlCQUFBO0FDUkY7QURVRTtFQUNFLFdBbkJlO0VBb0JmLG9CQUFBO0FDUko7QURVSTtFQUNFLHFCQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtFQUNBLFNBQUE7RUFDQSxtQkFyQnFCO0VBc0JyQixrQkFBQTtFQUNBLFdBNUJFO0VBNkJGLGlCQUFBO0FDUk47QURZRTtFQUNFLGVBQUE7QUNWSjtBRFlJO0VBQ0Usb0JBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxjQUFBO0FDVk47QURZTTtFQUNFLHlCQXZDZTtFQXdDZixrQkFBQTtFQUNBLCtDQUFBO0VBQ0EsWUFBQTtFQUNBLHNCQUFBO0VBQ0EsV0FBQTtFQUNBLFVBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FDVlI7QURZUTtFQUNFLGdCQUFBO0FDVlY7QURhUTtFQUNFLGVBQUE7RUFDQSxxQkFBQTtFQUNBLG1CQUFBO0VBQ0EscUJBQUE7RUFDQSwwQkFBQTtFQUNBLFVBQUE7QUNYVjtBRGtCQTtFQUNFLFlBQUE7RUFDQSxjQXRFYTtFQXVFYixlQUFBO0VBQ0EscUJBQUE7QUNmRjtBRGlCRTtFQUNFLGNBMUVrQjtBQzJEdEI7QURtQkE7RUFDRSxlQUFBO0VBQ0EsV0FuRk07RUFvRk4saUJBQUE7QUNoQkY7QURtQkE7RUFDRSxhQUFBO0VBQ0EsZ0JBQUE7QUNoQkY7QURtQkE7RUFDRSxjQUFBO0FDaEJGO0FEbUJBO0VBQ0UsMkJBQUE7RUFDQSxhQUFBO0VBQ0Esa0JBQUE7RUFDQSxxQkFBQTtFQUNBLGVBQUE7QUNoQkY7QURpQkU7RUFDRSxpQkFBQTtBQ2ZKIiwiZmlsZSI6InNyYy9hcHAvdGFzay1wbGFubmVyL3Rhc2stcGxhbm5lci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vY29sb3JzXHJcbiRjb2xvcl9taW5lX3NoYWZ0OiAjMjIyO1xyXG4kd2hpdGU6ICNmZmY7XHJcbiRibGFja18yOTogcmdiYSgwLCAwLCAwLCAwLjI5KTtcclxuJGNvbG9yX3NpbHZlcjogI2MzYzNjMztcclxuJGNvbG9yX3N1bnNldF9vcmFuZ2U6ICNmOTU0NTQ7XHJcbiRjb2xvcl9jYXRza2lsbF93aGl0ZTogI2U1ZWZmNTtcclxuJGNvbG9yX3ZlbmljZV9ibHVlX2FwcHJveDogIzBiNTY4YjtcclxuXHJcbi50YXNrLXBsYW5uZXIge1xyXG4gIG1hcmdpbjogMTBweCAwIDMwcHggMDtcclxuICBib3JkZXItcmFkaXVzOiAxNnB4O1xyXG4gIGN1cnNvcjogZGVmYXVsdDtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBwYWRkaW5nOiAxOHB4O1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcblxyXG4gIC5oZWFkZXIge1xyXG4gICAgY29sb3I6ICRjb2xvcl9taW5lX3NoYWZ0O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDE2cHg7XHJcblxyXG4gICAgaDMudGl0bGUge1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcclxuICAgICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcclxuICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICBiYWNrZ3JvdW5kOiAkY29sb3JfdmVuaWNlX2JsdWVfYXBwcm94O1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA2cHg7XHJcbiAgICAgIGNvbG9yOiAkd2hpdGU7XHJcbiAgICAgIHBhZGRpbmc6IDlweCAxNXB4O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnRhc2stYm9hcmQge1xyXG4gICAgbWluLXdpZHRoOiAxMDAlO1xyXG5cclxuICAgIC5saXN0cyB7XHJcbiAgICAgIG1hcmdpbjogMCAxMHB4IDVweCAwO1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICBvdmVyZmxvdzogYXV0bztcclxuXHJcbiAgICAgIC5saXN0IHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3JfY2F0c2tpbGxfd2hpdGU7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDFweCAzcHggNXB4IDBweCAkYmxhY2tfMjk7XHJcbiAgICAgICAgcGFkZGluZzogOHB4O1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICR3aGl0ZTtcclxuICAgICAgICBtYXJnaW46IDVweDtcclxuICAgICAgICB3aWR0aDogMjUlO1xyXG4gICAgICAgIG1pbi13aWR0aDogMjAwcHg7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAzMDBweDtcclxuXHJcbiAgICAgICAgJjpmaXJzdC1jaGlsZCB7XHJcbiAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaDUge1xyXG4gICAgICAgICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuNXB4O1xyXG4gICAgICAgICAgbWFyZ2luOiAwIDAgOHB4IDNweDtcclxuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xyXG4gICAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5kZWxldGUtaWNvbiB7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG4gIGNvbG9yOiAkY29sb3Jfc2lsdmVyO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcblxyXG4gICY6aG92ZXIge1xyXG4gICAgY29sb3I6ICRjb2xvcl9zdW5zZXRfb3JhbmdlO1xyXG4gIH1cclxufVxyXG5cclxuYS5hZGQtbGlzdCB7XHJcbiAgbWFyZ2luLXRvcDogNnB4O1xyXG4gIGNvbG9yOiAkd2hpdGU7XHJcbiAgbWFyZ2luLWxlZnQ6IDMycHg7XHJcbn1cclxuXHJcbi5saXN0cyAuZW1wdHktdGFza2xpc3R7XHJcbiAgZGlzcGxheTogbm9uZTtcclxuICBtYXJnaW46IDIwcHggMHB4O1xyXG59XHJcblxyXG4ubGlzdHMuZW1wdHkgLmVtcHR5LXRhc2tsaXN0e1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4uaGludHN7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzBjMGMwYzNiO1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBtYXJnaW4tdG9wOiAxNSU7XHJcbiAgaDYsIGxpe1xyXG4gICAgZm9udC1zaXplOiAwLjhyZW07XHJcbiAgfVxyXG59XHJcbiIsIi50YXNrLXBsYW5uZXIge1xuICBtYXJnaW46IDEwcHggMCAzMHB4IDA7XG4gIGJvcmRlci1yYWRpdXM6IDE2cHg7XG4gIGN1cnNvcjogZGVmYXVsdDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAxOHB4O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cbi50YXNrLXBsYW5uZXIgLmhlYWRlciB7XG4gIGNvbG9yOiAjMjIyO1xuICBwYWRkaW5nLWJvdHRvbTogMTZweDtcbn1cbi50YXNrLXBsYW5uZXIgLmhlYWRlciBoMy50aXRsZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udC1zaXplOiAxLjI1cmVtO1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICBtYXJnaW46IDA7XG4gIGJhY2tncm91bmQ6ICMwYjU2OGI7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgY29sb3I6ICNmZmY7XG4gIHBhZGRpbmc6IDlweCAxNXB4O1xufVxuLnRhc2stcGxhbm5lciAudGFzay1ib2FyZCB7XG4gIG1pbi13aWR0aDogMTAwJTtcbn1cbi50YXNrLXBsYW5uZXIgLnRhc2stYm9hcmQgLmxpc3RzIHtcbiAgbWFyZ2luOiAwIDEwcHggNXB4IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuLnRhc2stcGxhbm5lciAudGFzay1ib2FyZCAubGlzdHMgLmxpc3Qge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTVlZmY1O1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIGJveC1zaGFkb3c6IDFweCAzcHggNXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMjkpO1xuICBwYWRkaW5nOiA4cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XG4gIG1hcmdpbjogNXB4O1xuICB3aWR0aDogMjUlO1xuICBtaW4td2lkdGg6IDIwMHB4O1xuICBtYXgtd2lkdGg6IDMwMHB4O1xufVxuLnRhc2stcGxhbm5lciAudGFzay1ib2FyZCAubGlzdHMgLmxpc3Q6Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4tbGVmdDogMHB4O1xufVxuLnRhc2stcGxhbm5lciAudGFzay1ib2FyZCAubGlzdHMgLmxpc3QgaDUge1xuICBmb250LXNpemU6IDFyZW07XG4gIGxldHRlci1zcGFjaW5nOiAwLjVweDtcbiAgbWFyZ2luOiAwIDAgOHB4IDNweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgd2lkdGg6IDkwJTtcbn1cblxuLmRlbGV0ZS1pY29uIHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBjb2xvcjogI2MzYzNjMztcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG4uZGVsZXRlLWljb246aG92ZXIge1xuICBjb2xvcjogI2Y5NTQ1NDtcbn1cblxuYS5hZGQtbGlzdCB7XG4gIG1hcmdpbi10b3A6IDZweDtcbiAgY29sb3I6ICNmZmY7XG4gIG1hcmdpbi1sZWZ0OiAzMnB4O1xufVxuXG4ubGlzdHMgLmVtcHR5LXRhc2tsaXN0IHtcbiAgZGlzcGxheTogbm9uZTtcbiAgbWFyZ2luOiAyMHB4IDBweDtcbn1cblxuLmxpc3RzLmVtcHR5IC5lbXB0eS10YXNrbGlzdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uaGludHMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGMwYzBjM2I7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tdG9wOiAxNSU7XG59XG4uaGludHMgaDYsIC5oaW50cyBsaSB7XG4gIGZvbnQtc2l6ZTogMC44cmVtO1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { ConfirmDialogComponent } from './dialogs/confirm-dialogs/confirm-dialog.component';\r\nimport { InputDialogComponent } from './dialogs/input-dialogs/input-dialog.component';\r\nimport { ITask } from './modal/task';\r\nimport { ITaskList } from './modal/task-list';\r\nimport { TaskListService } from './sevices/task-list.service';\r\n\r\n/**\r\n * Task list component to render the each task list and it's task inside it.\r\n */\r\n@Component({\r\n  selector: 'task-planner',\r\n  styleUrls: ['./task-planner.component.scss'],\r\n  templateUrl: './task-planner.component.html',\r\n})\r\nexport class TaskPlannerComponent implements OnInit {\r\n  public taskLists: Array<ITaskList>;\r\n\r\n  constructor(\r\n    public dialogService: NgbModal,\r\n    private taskListService: TaskListService,\r\n  ) {\r\n    // Initialize the tasklist\r\n    this.taskLists = [];\r\n  }\r\n\r\n  public ngOnInit() {\r\n    // fetch the all task lists from the server\r\n    this.taskListService.get().subscribe((taskLists: ITaskList[]) => {\r\n      this.taskLists = taskLists;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Open a popup to add a new task list\r\n   */\r\n  public addList() {\r\n    const dialogObj = this.dialogService.open(InputDialogComponent, {\r\n      backdrop: 'static',\r\n    });\r\n\r\n    dialogObj.componentInstance.title = 'Add new task list';\r\n    dialogObj.componentInstance.submit.subscribe((listName: string) => {\r\n      this.taskListService\r\n        .post({ name: listName })\r\n        .subscribe((taskLists: ITaskList[]) => {\r\n          this.taskLists = taskLists;\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Open the confirmation poup to delete a task list along with it's task\r\n   * @param taskListToDelete : Task object\r\n   */\r\n  public deleteTaskList(taskListToDelete: ITaskList) {\r\n    const dialogObj = this.dialogService.open(ConfirmDialogComponent, {\r\n      backdrop: 'static',\r\n    });\r\n    dialogObj.componentInstance.title = 'Delete task list';\r\n    dialogObj.componentInstance.isDelete.subscribe((deleteList: boolean) => {\r\n      if (deleteList) {\r\n        this.taskListService\r\n          .delete(taskListToDelete)\r\n          .subscribe((taskLists: ITaskList[]) => {\r\n            this.taskLists = taskLists;\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  public errorOnMove(event) {\r\n    this.taskListService.move(this.taskLists, event);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SortablejsModule } from 'ngx-sortablejs';\n\nimport { ConfirmDialogComponent } from './dialogs/confirm-dialogs/confirm-dialog.component';\nimport { InputDialogComponent } from './dialogs/input-dialogs/input-dialog.component';\nimport { TaskListService } from './sevices/task-list.service';\nimport { TaskListComponent } from './task-list/task-list.component';\nimport { TaskPlannerComponent } from './task-planner.component';\n\n@NgModule({\n  declarations: [\n    TaskPlannerComponent,\n    TaskListComponent,\n    InputDialogComponent,\n    ConfirmDialogComponent,\n  ],\n  exports: [TaskPlannerComponent, TaskListComponent],\n  imports: [CommonModule, ReactiveFormsModule, NgbModule, SortablejsModule],\n  providers: [TaskListService],\n})\nexport class TaskPlannerModule { }\n","import { IEnvironment } from '../app/modal/environment';\n\nconst apiUrl = '/tasks-list';\n\nexport const environment: IEnvironment = {\n  production: true,\n  apiUrl,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"]}